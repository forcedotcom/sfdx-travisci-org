#Gives permission to install Salesforce CLI
sudo: true

before_install:
#
# The before_install steps downloads Salesforce CLI and installs it
#

#Assign variables    
- export CLIURL=https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-amd64.tar.xz
- export SFDX_AUTOUPDATE_DISABLE=false
- export SFDX_USE_GENERIC_UNIX_KEYCHAIN=true
- export SFDX_DOMAIN_RETRY=300
- export SFDX_DISABLE_APP_HUB=true
- export SFDX_LOG_LEVEL=DEBUG
#Create sfdx directory
- mkdir ~/sfdx
#Install Salesforce CLI
# By default, the script installs the current version of Salesforce CLI. To install the release candidate, set the DX_CLI_URL_CUSTOM local variable to the appropriate URL
- wget -qO- ${DX_CLI_URL_CUSTOM-$CLIURL} | tar xJ -C ~/sfdx --strip-components 1
- export PATH=~/sfdx/bin:$PATH
- sfdx --version

#Decrypt server key
- openssl enc -nosalt -aes-256-cbc -d -in assets/server.key.enc -out assets/server.key -base64 -K $DECRYPTION_KEY -iv $DECRYPTION_IV

before_script:
#
# The before_script step initializes varibles used in the script step
#

#Assign variables
- export DEPLOYDIR=src
- export TESTLEVEL=RunLocalTests
- sfdx --version
- sfdx plugins --core

script:
#
# The script step authenticates to the target deployment org and deploys the metadata
#

  #Authorize target deployment org
- sfdx auth:jwt:grant --instanceurl https://test.salesforce.com  --clientid $CONSUMERKEY --jwtkeyfile assets/server.key --username $USERNAME --setalias UAT
  #Deploy to target deployment org and run unit tests
- sfdx force:mdapi:deploy --wait 10 --deploydir $DEPLOYDIR --targetusername UAT --testlevel $TESTLEVEL
  #Example shows how to run a check-only deploy.
  #- sfdx force:mdapi:deploy --checkonly --wait 10 --deploydir $DEPLOYDIR --targetusername UAT --testlevel $TESTLEVEL
